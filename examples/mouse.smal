// ====================
// MOUSE CURSOR example
// ====================

// Devices layout
const byte System.r { 0x08 }
const byte System.g { 0x0a }
const byte System.b { 0x0c }

const byte Screen.vector { 0x20 }
const byte Screen.width  { 0x22 }
const byte Screen.height { 0x24 }
const byte Screen.x      { 0x28 }
const byte Screen.y      { 0x2a }
const byte Screen.addr   { 0x2c }
const byte Screen.pixel  { 0x2e }
const byte Screen.sprite { 0x2f }

const byte Mouse.vector { 0x90 }
const byte Mouse.x      { 0x92 }
const byte Mouse.y      { 0x94 }
const byte Mouse.state  { 0x96 }

// Constants
const short SIZE { 128* }

// Variables (always 0 initialized)
var short x
var short y

// When game started...
fun on-reset ( -> ) {
	// Setup color palette
	0xf07f* System.r output
	0xf0d6* System.g output
	0xf0b2* System.b output

	// Setup window size
	SIZE Screen.width output
	SIZE Screen.height output

	// "Subscribe" to mouse events
	&on-mouse Mouse.vector output
}

// On any mouse event...
fun on-mouse ( -> ) {
	// Clear previous cursor sprite
	x Screen.x output
	y Screen.y output
	&sprite.cursor Screen.addr output
	0b1000000 Screen.sprite output

	// Store new mouse position
	Mouse.y input2 &y store
	Mouse.x input2 &x store

	// Draw cursor sprite in the new mouse position
	x Screen.x output
	y Screen.y output
	&sprite.cursor Screen.addr output

	// Change cursor color based on whether any mouse button is pressed
	Mouse.state input if {
		0b1000011 // pressed
	} else {
		0b1000010 // not pressed
	}

	Screen.sprite output
}

// Cursor sprite
data sprite.cursor {
	0b10000000
	0b11000000
	0b11100000
	0b11110000
	0b11111000
	0b11100000
	0b00010000
	0b00000000
}
